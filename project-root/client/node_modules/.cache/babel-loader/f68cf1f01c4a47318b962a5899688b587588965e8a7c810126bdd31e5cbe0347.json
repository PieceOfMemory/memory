{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useParams}from'react-router-dom';import'./GroupDetail.css';// 더미 그룹 데이터\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const dummyGroup={id:1,name:'달봉이네 가족',introduction:'서로 한 마음으로 응원하고 아끼는 달봉이네 가족입니다.',dDay:'D+265',memoriesCount:8,likesCount:1500,badges:['7일 연속 게시글 등록','그룹 공감 1만 개 이상 받기','추억 공감 1만 개 이상 받기'],imageUrl:'https://via.placeholder.com/300'};// 더미 추억 데이터 (20개 생성)\nconst dummyMemories=Array.from({length:20},(_,index)=>({id:index+1,nickname:`사용자${index+1}`,title:`추억 제목 ${index+1}`,content:`이것은 추억 ${index+1}의 내용입니다.`,postPassword:'password123',groupPassword:'groupPassword123',imageUrl:`https://via.placeholder.com/300?text=Memory+${index+1}`,tags:['#추억','#기록',`#태그${index+1}`],location:`위치${index+1}`,moment:`2024-01-${index%31+1} 12:00`,isPublic:index%2===0,likes:Math.floor(Math.random()*100),comments:Math.floor(Math.random()*20)}));function GroupDetail(){const[group]=useState(dummyGroup);const[memories,setMemories]=useState(dummyMemories);const[isPublic,setIsPublic]=useState(true);const[searchTerm,setSearchTerm]=useState('');const[isSortOpen,setIsSortOpen]=useState(false);const[sortType,setSortType]=useState('최신순');const[visibleMemories,setVisibleMemories]=useState(8);const navigate=useNavigate();const{groupId}=useParams();// 그룹 정보 수정하기 버튼 클릭 핸들러\nconst handleEditGroup=()=>{navigate(`/GroupEdit/${groupId}`);// GroupEdit.js로 이동\n};// 그룹 삭제하기 버튼 클릭 핸들러\nconst handleDeleteGroup=()=>{navigate(`/GroupDelete/${groupId}`);// GroupDelete.js로 이동\n};// 추억 올리기 버튼 클릭 핸들러\nconst handleCreateMemory=()=>{navigate('/PostCreate');};// 정렬에 따른 추억 목록 정렬\nconst sortMemories=type=>{let sortedMemories;switch(type){case'최신순':sortedMemories=[...memories].sort((a,b)=>new Date(b.moment)-new Date(a.moment));break;case'댓글순':sortedMemories=[...memories].sort((a,b)=>b.comments-a.comments);break;case'공감순':sortedMemories=[...memories].sort((a,b)=>b.likes-a.likes);break;default:sortedMemories=memories;}setMemories(sortedMemories);setSortType(type);setIsSortOpen(false);};// 검색어 입력 핸들러\nconst handleSearchInputChange=e=>{setSearchTerm(e.target.value);};// 검색 버튼 클릭 또는 엔터키 입력 시 실행\nconst handleSearch=e=>{e.preventDefault();const filteredMemories=dummyMemories.filter(memory=>memory.isPublic===isPublic&&memory.title.includes(searchTerm));setMemories(filteredMemories);};// 더보기 버튼 클릭 시\nconst handleLoadMore=()=>{setVisibleMemories(prev=>prev+8);};// 추억 클릭 시 추억 상세 페이지로 이동\nconst handleMemoryClick=memoryId=>{navigate(`/Posts/${memoryId}`);};return/*#__PURE__*/_jsxs(\"div\",{className:\"group-detail-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"group-info-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"group-image-container\",children:/*#__PURE__*/_jsx(\"img\",{src:group.imageUrl,alt:\"\\uADF8\\uB8F9 \\uB300\\uD45C \\uC774\\uBBF8\\uC9C0\",className:\"group-image\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"group-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"group-header\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:group.dDay}),\" | \",/*#__PURE__*/_jsx(\"span\",{children:\"\\uACF5\\uAC1C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"group-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"group-action-button\",onClick:handleEditGroup,children:\"\\uADF8\\uB8F9 \\uC815\\uBCF4 \\uC218\\uC815\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"group-action-button\",onClick:handleDeleteGroup,children:\"\\uADF8\\uB8F9 \\uC0AD\\uC81C\\uD558\\uAE30\"})]})]}),/*#__PURE__*/_jsx(\"h1\",{className:\"group-title\",children:group.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"group-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uCD94\\uC5B5 \",group.memoriesCount]}),\" |\",/*#__PURE__*/_jsxs(\"span\",{children:[\" \\uADF8\\uB8F9 \\uACF5\\uAC10 \",group.likesCount,\"K\"]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"group-introduction\",children:group.introduction}),/*#__PURE__*/_jsx(\"div\",{className:\"group-badges\",children:group.badges.map((badge,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"badge-item\",children:badge},index))}),/*#__PURE__*/_jsx(\"button\",{className:\"send-empathy-button\",children:\"\\uACF5\\uAC10 \\uBCF4\\uB0B4\\uAE30\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"memory-header-box\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"memory-header-title\",children:\"\\uCD94\\uC5B5 \\uBAA9\\uB85D\"}),/*#__PURE__*/_jsx(\"button\",{className:\"create-memory-button\",onClick:handleCreateMemory,children:\"\\uCD94\\uC5B5 \\uC62C\\uB9AC\\uAE30\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toggle-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:`toggle-button ${isPublic?'active':''}`,onClick:()=>setIsPublic(true),children:\"\\uACF5\\uAC1C\"}),/*#__PURE__*/_jsx(\"div\",{className:`toggle-button ${!isPublic?'active':''}`,onClick:()=>setIsPublic(false),children:\"\\uBE44\\uACF5\\uAC1C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sort-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sort-toggle\",onClick:()=>setIsSortOpen(!isSortOpen),children:sortType}),isSortOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"sort-options\",children:[/*#__PURE__*/_jsx(\"div\",{onClick:()=>sortMemories('최신순'),children:\"\\uCD5C\\uC2E0\\uC21C\"}),/*#__PURE__*/_jsx(\"div\",{onClick:()=>sortMemories('댓글순'),children:\"\\uB313\\uAE00\\uC21C\"}),/*#__PURE__*/_jsx(\"div\",{onClick:()=>sortMemories('공감순'),children:\"\\uACF5\\uAC10\\uC21C\"})]})]}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSearch,className:\"search-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"search-bar\",placeholder:\"\\uCD94\\uC5B5 \\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",value:searchTerm,onChange:handleSearchInputChange})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"memory-list\",children:memories.slice(0,visibleMemories).map(memory=>/*#__PURE__*/_jsxs(\"div\",{className:\"memory-card\",onClick:()=>handleMemoryClick(memory.id),children:[/*#__PURE__*/_jsx(\"img\",{src:memory.imageUrl,alt:\"\\uCD94\\uC5B5 \\uC774\\uBBF8\\uC9C0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"memory-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"memory-meta\",children:[/*#__PURE__*/_jsx(\"span\",{children:memory.nickname}),\" | \",/*#__PURE__*/_jsx(\"span\",{children:memory.isPublic?'공개':'비공개'})]}),/*#__PURE__*/_jsx(\"h3\",{children:memory.title}),/*#__PURE__*/_jsx(\"div\",{className:\"memory-tags\",children:memory.tags.map((tag,index)=>/*#__PURE__*/_jsx(\"span\",{children:tag},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"memory-stats\",children:[/*#__PURE__*/_jsx(\"span\",{children:memory.moment}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uACF5\\uAC10 \",memory.likes]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uB313\\uAE00 \",memory.comments]})]})]})]},memory.id))}),memories.length>visibleMemories&&/*#__PURE__*/_jsx(\"div\",{className:\"load-more-box\",children:/*#__PURE__*/_jsx(\"button\",{className:\"load-more-button\",onClick:handleLoadMore,children:\"\\uB354\\uBCF4\\uAE30\"})})]});}export default GroupDetail;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsx","_jsx","jsxs","_jsxs","dummyGroup","id","name","introduction","dDay","memoriesCount","likesCount","badges","imageUrl","dummyMemories","Array","from","length","_","index","nickname","title","content","postPassword","groupPassword","tags","location","moment","isPublic","likes","Math","floor","random","comments","GroupDetail","group","memories","setMemories","setIsPublic","searchTerm","setSearchTerm","isSortOpen","setIsSortOpen","sortType","setSortType","visibleMemories","setVisibleMemories","navigate","groupId","handleEditGroup","handleDeleteGroup","handleCreateMemory","sortMemories","type","sortedMemories","sort","a","b","Date","handleSearchInputChange","e","target","value","handleSearch","preventDefault","filteredMemories","filter","memory","includes","handleLoadMore","prev","handleMemoryClick","memoryId","className","children","src","alt","onClick","map","badge","onSubmit","placeholder","onChange","slice","tag"],"sources":["C:/Users/user/Desktop/2024-2/boost/memoryMain/memory/project-root/client/src/group/components/GroupDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './GroupDetail.css';\r\n\r\n// 더미 그룹 데이터\r\nconst dummyGroup = {\r\n  id: 1,\r\n  name: '달봉이네 가족',\r\n  introduction: '서로 한 마음으로 응원하고 아끼는 달봉이네 가족입니다.',\r\n  dDay: 'D+265',\r\n  memoriesCount: 8,\r\n  likesCount: 1500,\r\n  badges: ['7일 연속 게시글 등록', '그룹 공감 1만 개 이상 받기', '추억 공감 1만 개 이상 받기'],\r\n  imageUrl: 'https://via.placeholder.com/300',\r\n};\r\n\r\n// 더미 추억 데이터 (20개 생성)\r\nconst dummyMemories = Array.from({ length: 20 }, (_, index) => ({\r\n  id: index + 1,\r\n  nickname: `사용자${index + 1}`,\r\n  title: `추억 제목 ${index + 1}`,\r\n  content: `이것은 추억 ${index + 1}의 내용입니다.`,\r\n  postPassword: 'password123',\r\n  groupPassword: 'groupPassword123',\r\n  imageUrl: `https://via.placeholder.com/300?text=Memory+${index + 1}`,\r\n  tags: ['#추억', '#기록', `#태그${index + 1}`],\r\n  location: `위치${index + 1}`,\r\n  moment: `2024-01-${(index % 31) + 1} 12:00`,\r\n  isPublic: index % 2 === 0,\r\n  likes: Math.floor(Math.random() * 100),\r\n  comments: Math.floor(Math.random() * 20),\r\n}));\r\n\r\nfunction GroupDetail() {\r\n  const [group] = useState(dummyGroup);\r\n  const [memories, setMemories] = useState(dummyMemories);\r\n  const [isPublic, setIsPublic] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isSortOpen, setIsSortOpen] = useState(false);\r\n  const [sortType, setSortType] = useState('최신순');\r\n  const [visibleMemories, setVisibleMemories] = useState(8);\r\n  const navigate = useNavigate();\r\n  const { groupId } = useParams();\r\n\r\n  // 그룹 정보 수정하기 버튼 클릭 핸들러\r\n  const handleEditGroup = () => {\r\n    navigate(`/GroupEdit/${groupId}`); // GroupEdit.js로 이동\r\n  };\r\n\r\n  // 그룹 삭제하기 버튼 클릭 핸들러\r\n  const handleDeleteGroup = () => {\r\n    navigate(`/GroupDelete/${groupId}`); // GroupDelete.js로 이동\r\n  };\r\n\r\n  // 추억 올리기 버튼 클릭 핸들러\r\n  const handleCreateMemory = () => {\r\n    navigate('/PostCreate');\r\n  };\r\n\r\n  // 정렬에 따른 추억 목록 정렬\r\n  const sortMemories = (type) => {\r\n    let sortedMemories;\r\n    switch (type) {\r\n      case '최신순':\r\n        sortedMemories = [...memories].sort((a, b) => new Date(b.moment) - new Date(a.moment));\r\n        break;\r\n      case '댓글순':\r\n        sortedMemories = [...memories].sort((a, b) => b.comments - a.comments);\r\n        break;\r\n      case '공감순':\r\n        sortedMemories = [...memories].sort((a, b) => b.likes - a.likes);\r\n        break;\r\n      default:\r\n        sortedMemories = memories;\r\n    }\r\n    setMemories(sortedMemories);\r\n    setSortType(type);\r\n    setIsSortOpen(false);\r\n  };\r\n\r\n  // 검색어 입력 핸들러\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  // 검색 버튼 클릭 또는 엔터키 입력 시 실행\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    const filteredMemories = dummyMemories.filter(\r\n      (memory) => memory.isPublic === isPublic && memory.title.includes(searchTerm)\r\n    );\r\n    setMemories(filteredMemories);\r\n  };\r\n\r\n  // 더보기 버튼 클릭 시\r\n  const handleLoadMore = () => {\r\n    setVisibleMemories((prev) => prev + 8);\r\n  };\r\n\r\n  // 추억 클릭 시 추억 상세 페이지로 이동\r\n  const handleMemoryClick = (memoryId) => {\r\n    navigate(`/Posts/${memoryId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"group-detail-container\">\r\n      {/* 그룹 전체 정보 박스 */}\r\n      <div className=\"group-info-box\">\r\n        <div className=\"group-image-container\">\r\n          <img src={group.imageUrl} alt=\"그룹 대표 이미지\" className=\"group-image\" />\r\n        </div>\r\n        <div className=\"group-details\">\r\n          <div className=\"group-header\">\r\n            <div>\r\n              <span>{group.dDay}</span> | <span>공개</span>\r\n            </div>\r\n            <div className=\"group-actions\">\r\n              {/* 그룹 정보 수정하기 버튼 */}\r\n              <button className=\"group-action-button\" onClick={handleEditGroup}>\r\n                그룹 정보 수정하기\r\n              </button>\r\n              {/* 그룹 삭제하기 버튼 */}\r\n              <button className=\"group-action-button\" onClick={handleDeleteGroup}>\r\n                그룹 삭제하기\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <h1 className=\"group-title\">{group.name}</h1>\r\n          <div className=\"group-stats\">\r\n            <span>추억 {group.memoriesCount}</span> | \r\n            <span> 그룹 공감 {group.likesCount}K</span>\r\n          </div>\r\n\r\n          <p className=\"group-introduction\">{group.introduction}</p>\r\n\r\n          <div className=\"group-badges\">\r\n            {group.badges.map((badge, index) => (\r\n              <span key={index} className=\"badge-item\">{badge}</span>\r\n            ))}\r\n          </div>\r\n\r\n          <button className=\"send-empathy-button\">공감 보내기</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 추억 목록 헤더 */}\r\n      <div className=\"memory-header-box\">\r\n        <h2 className=\"memory-header-title\">추억 목록</h2>\r\n        <button className=\"create-memory-button\" onClick={handleCreateMemory}>\r\n          추억 올리기\r\n        </button>\r\n      </div>\r\n\r\n      {/* 검색 및 필터 박스 */}\r\n      <div className=\"filter-box\">\r\n        <div className=\"toggle-container\">\r\n          <div \r\n            className={`toggle-button ${isPublic ? 'active' : ''}`} \r\n            onClick={() => setIsPublic(true)}>\r\n            공개\r\n          </div>\r\n          <div \r\n            className={`toggle-button ${!isPublic ? 'active' : ''}`} \r\n            onClick={() => setIsPublic(false)}>\r\n            비공개\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sort-container\">\r\n          <button className=\"sort-toggle\" onClick={() => setIsSortOpen(!isSortOpen)}>{sortType}</button>\r\n          {isSortOpen && (\r\n            <div className=\"sort-options\">\r\n              <div onClick={() => sortMemories('최신순')}>최신순</div>\r\n              <div onClick={() => sortMemories('댓글순')}>댓글순</div>\r\n              <div onClick={() => sortMemories('공감순')}>공감순</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <form onSubmit={handleSearch} className=\"search-container\">\r\n          <input \r\n            type=\"text\" \r\n            className=\"search-bar\" \r\n            placeholder=\"추억 제목을 입력해주세요\" \r\n            value={searchTerm} \r\n            onChange={handleSearchInputChange} \r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      {/* 추억 목록 */}\r\n      <div className=\"memory-list\">\r\n        {memories.slice(0, visibleMemories).map((memory) => (\r\n          <div key={memory.id} className=\"memory-card\" onClick={() => handleMemoryClick(memory.id)}>\r\n            <img src={memory.imageUrl} alt=\"추억 이미지\" />\r\n            <div className=\"memory-info\">\r\n              <div className=\"memory-meta\">\r\n                <span>{memory.nickname}</span> | <span>{memory.isPublic ? '공개' : '비공개'}</span>\r\n              </div>\r\n              <h3>{memory.title}</h3>\r\n              <div className=\"memory-tags\">\r\n                {memory.tags.map((tag, index) => (\r\n                  <span key={index}>{tag}</span>\r\n                ))}\r\n              </div>\r\n              <div className=\"memory-stats\">\r\n                <span>{memory.moment}</span>\r\n                <span>공감 {memory.likes}</span>\r\n                <span>댓글 {memory.comments}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* 더보기 버튼 */}\r\n      {memories.length > visibleMemories && (\r\n        <div className=\"load-more-box\">\r\n          <button className=\"load-more-button\" onClick={handleLoadMore}>더보기</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}