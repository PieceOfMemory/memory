{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\toyproject\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'; // Switch 대신 Routes 사용\nimport PublicGroupList from './group/components/PublicGroupList'; // PublicGroupList 페이지 불러오기\nimport GroupCreate from './group/components/GroupCreate'; // GroupCreate.js 파일을 임포트합니다.\nimport GroupCreateSuccess from './group/components/GroupCreateSuccess';\nimport ConfirmationModal from './group/components/ConfirmationModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 모달 표시를 제어하는 상태\n  const [showModal, setShowModal] = useState(false);\n\n  // 모달 열기/닫기 핸들러\n  const handleCloseModal = () => setShowModal(false);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(PublicGroupList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/GroupCreate\",\n          element: /*#__PURE__*/_jsxDEV(GroupCreate, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/GroupCreateSuccess\",\n          element: /*#__PURE__*/_jsxDEV(GroupCreateSuccess, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n        title: \"\\uD655\\uC778\",\n        message: \"\\uC791\\uC5C5\\uC774 \\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\",\n        onClose: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","PublicGroupList","GroupCreate","GroupCreateSuccess","ConfirmationModal","jsxDEV","_jsxDEV","App","_s","showModal","setShowModal","handleCloseModal","children","exact","path","element","fileName","_jsxFileName","lineNumber","columnNumber","title","message","onClose","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/toyproject/src/app.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'; // Switch 대신 Routes 사용\r\nimport PublicGroupList from './group/components/PublicGroupList'; // PublicGroupList 페이지 불러오기\r\nimport GroupCreate from './group/components/GroupCreate'; // GroupCreate.js 파일을 임포트합니다.\r\nimport GroupCreateSuccess from './group/components/GroupCreateSuccess';\r\nimport ConfirmationModal from './group/components/ConfirmationModal';\r\n\r\nfunction App() {\r\n  // 모달 표시를 제어하는 상태\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // 모달 열기/닫기 핸들러\r\n  const handleCloseModal = () => setShowModal(false);\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* Routes를 사용하여 각 페이지 이동 */}\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<PublicGroupList />} /> {/* 루트 경로에서 공개 그룹 목록 페이지를 렌더링 */}\r\n          <Route path=\"/GroupCreate\" element={<GroupCreate />} /> {/* 그룹 만들기 페이지 */}\r\n          <Route path=\"/GroupCreateSuccess\" element={<GroupCreateSuccess />} /> {/* 그룹 만들기 성공 페이지 */}\r\n        </Routes>\r\n\r\n        {/* 조건부로 모달 렌더링 */}\r\n        {showModal && (\r\n          <ConfirmationModal\r\n            title=\"확인\"\r\n            message=\"작업이 성공적으로 완료되었습니다.\"\r\n            onClose={handleCloseModal}\r\n          />\r\n        )}\r\n\r\n        {/* 필요에 따라 추가할 컴포넌트 */}\r\n        {/*<Group />    {/*Group 컴포넌트 렌더링 */}\r\n        {/*<Post />     {/*Post 컴포넌트 렌더링 */}\r\n        {/*<Comment /> {/* Comment 컴포넌트 렌더링 */}\r\n        {/*<Badges />  {/* Badges 컴포넌트 렌더링 */}\r\n      </div>\r\n      \r\n      {/* 임시로 모달 열기 버튼 추가 (필요 시 삭제 가능) */}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB,CAAC,CAAC;AAC3E,OAAOC,eAAe,MAAM,oCAAoC,CAAC,CAAC;AAClE,OAAOC,WAAW,MAAM,gCAAgC,CAAC,CAAC;AAC1D,OAAOC,kBAAkB,MAAM,uCAAuC;AACtE,OAAOC,iBAAiB,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMe,gBAAgB,GAAGA,CAAA,KAAMD,YAAY,CAAC,KAAK,CAAC;EAElD,oBACEJ,OAAA,CAACR,MAAM;IAAAc,QAAA,eACLN,OAAA;MAAAM,QAAA,gBAEEN,OAAA,CAACN,MAAM;QAAAY,QAAA,gBACLN,OAAA,CAACP,KAAK;UAACc,KAAK;UAACC,IAAI,EAAC,GAAG;UAACC,OAAO,eAAET,OAAA,CAACL,eAAe;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,eACvDb,OAAA,CAACP,KAAK;UAACe,IAAI,EAAC,cAAc;UAACC,OAAO,eAAET,OAAA,CAACJ,WAAW;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,eACxDb,OAAA,CAACP,KAAK;UAACe,IAAI,EAAC,qBAAqB;UAACC,OAAO,eAAET,OAAA,CAACH,kBAAkB;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,EAGRV,SAAS,iBACRH,OAAA,CAACF,iBAAiB;QAChBgB,KAAK,EAAC,cAAI;QACVC,OAAO,EAAC,+FAAoB;QAC5BC,OAAO,EAAEX;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGA,CAAC;AAEb;AAACX,EAAA,CApCQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}