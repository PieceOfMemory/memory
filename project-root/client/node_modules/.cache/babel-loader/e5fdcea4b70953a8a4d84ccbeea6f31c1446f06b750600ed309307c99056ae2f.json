{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\uD1A0\\uC774\\uD504\\uB85C\\uC81D\\uD2B8\\\\memory\\\\project-root\\\\client\\\\src\\\\comment\\\\CommentEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CommentEdit.css'; // CSS 파일 연동\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentEdit({\n  commentId,\n  currentNickname,\n  currentContent,\n  onSubmit\n}) {\n  _s();\n  const [nickname, setNickname] = useState(currentNickname);\n  const [content, setContent] = useState(currentContent);\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // 입력 필드 핸들러\n  const handleNicknameChange = e => {\n    setNickname(e.target.value);\n  };\n  const handleContentChange = e => {\n    setContent(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n\n  // 댓글 수정 버튼 핸들러\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // 입력 유효성 검사\n    if (!nickname || !content || !password) {\n      setErrorMessage('모든 항목을 입력해 주세요.');\n      return;\n    }\n\n    // 수정할 데이터 구성\n    const commentData = {\n      nickname,\n      content,\n      password\n    };\n    try {\n      // API 요청\n      const response = await fetch(`/api/comments/${commentId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(commentData)\n      });\n      if (response.ok) {\n        const updatedComment = await response.json();\n        console.log('댓글 수정 성공:', updatedComment);\n\n        // 수정된 댓글 데이터 전달\n        onSubmit(updatedComment);\n\n        // 입력 필드 초기화 및 에러 메시지 초기화\n        setPassword('');\n        setErrorMessage('');\n      } else {\n        // 오류 처리\n        const errorData = await response.json();\n        console.error('댓글 수정 실패:', errorData.message);\n        setErrorMessage('댓글 수정에 실패했습니다. 다시 시도해 주세요.');\n      }\n    } catch (error) {\n      console.error('댓글 수정 에러:', error);\n      setErrorMessage('오류가 발생했습니다. 다시 시도해 주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB313\\uAE00 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nickname\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nickname\",\n          value: nickname,\n          onChange: handleNicknameChange,\n          placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"\\uB313\\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          value: content,\n          onChange: handleContentChange,\n          placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"\\uC218\\uC815\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentEdit, \"8LZPalFbUWiyZazGRcy6RHYSkEY=\");\n_c = CommentEdit;\nexport default CommentEdit;\nvar _c;\n$RefreshReg$(_c, \"CommentEdit\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CommentEdit","commentId","currentNickname","currentContent","onSubmit","_s","nickname","setNickname","content","setContent","password","setPassword","errorMessage","setErrorMessage","handleNicknameChange","e","target","value","handleContentChange","handlePasswordChange","handleSubmit","preventDefault","commentData","response","fetch","method","headers","body","JSON","stringify","ok","updatedComment","json","console","log","errorData","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/토이프로젝트/memory/project-root/client/src/comment/CommentEdit.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CommentEdit.css'; // CSS 파일 연동\r\n\r\nfunction CommentEdit({ commentId, currentNickname, currentContent, onSubmit }) {\r\n  const [nickname, setNickname] = useState(currentNickname);\r\n  const [content, setContent] = useState(currentContent);\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // 입력 필드 핸들러\r\n  const handleNicknameChange = (e) => {\r\n    setNickname(e.target.value);\r\n  };\r\n\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  // 댓글 수정 버튼 핸들러\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // 입력 유효성 검사\r\n    if (!nickname || !content || !password) {\r\n      setErrorMessage('모든 항목을 입력해 주세요.');\r\n      return;\r\n    }\r\n\r\n    // 수정할 데이터 구성\r\n    const commentData = {\r\n      nickname,\r\n      content,\r\n      password,\r\n    };\r\n\r\n    try {\r\n      // API 요청\r\n      const response = await fetch(`/api/comments/${commentId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(commentData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedComment = await response.json();\r\n        console.log('댓글 수정 성공:', updatedComment);\r\n\r\n        // 수정된 댓글 데이터 전달\r\n        onSubmit(updatedComment);\r\n\r\n        // 입력 필드 초기화 및 에러 메시지 초기화\r\n        setPassword('');\r\n        setErrorMessage('');\r\n      } else {\r\n        // 오류 처리\r\n        const errorData = await response.json();\r\n        console.error('댓글 수정 실패:', errorData.message);\r\n        setErrorMessage('댓글 수정에 실패했습니다. 다시 시도해 주세요.');\r\n      }\r\n    } catch (error) {\r\n      console.error('댓글 수정 에러:', error);\r\n      setErrorMessage('오류가 발생했습니다. 다시 시도해 주세요.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-container\">\r\n        <h2>댓글 수정</h2>\r\n        <form onSubmit={handleSubmit} className=\"edit-form\">\r\n          {/* 닉네임 입력 */}\r\n          <label htmlFor=\"nickname\">닉네임</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"nickname\"\r\n            value={nickname}\r\n            onChange={handleNicknameChange}\r\n            placeholder=\"닉네임을 입력해 주세요\"\r\n            required\r\n          />\r\n\r\n          {/* 댓글 내용 입력 */}\r\n          <label htmlFor=\"content\">댓글</label>\r\n          <textarea\r\n            id=\"content\"\r\n            value={content}\r\n            onChange={handleContentChange}\r\n            placeholder=\"댓글을 입력해 주세요\"\r\n            required\r\n          />\r\n\r\n          {/* 비밀번호 입력 */}\r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            placeholder=\"비밀번호를 입력해 주세요\"\r\n            required\r\n          />\r\n\r\n          {/* 에러 메시지 */}\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n          {/* 수정하기 버튼 */}\r\n          <button type=\"submit\" className=\"submit-button\">수정하기</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentEdit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}