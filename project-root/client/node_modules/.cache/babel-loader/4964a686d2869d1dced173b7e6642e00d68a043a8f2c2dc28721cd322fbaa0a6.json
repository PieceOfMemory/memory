{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Link,useNavigate}from'react-router-dom';import'./publicGroupList.css';// 더미 그룹 데이터 생성 (컴포넌트 외부에서 정의)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const dummyGroups=Array.from({length:20},(_,index)=>({id:index+1,name:`그룹 ${index+1}`,introduction:`이것은 그룹 ${index+1}의 소개입니다.`,isPublic:index%2===0,dDay:Math.floor(Math.random()*300),// 숫자로 변경하여 정렬하기 쉽게 수정\nbadges:Math.floor(Math.random()*5),memories:Math.floor(Math.random()*20),likes:(Math.random()*1000).toFixed(1),imageUrl:'https://via.placeholder.com/300'}));function PublicGroupList(){const[isPublic,setIsPublic]=useState(true);const[groups,setGroups]=useState([]);const[visibleGroups,setVisibleGroups]=useState(8);const[isSortOpen,setIsSortOpen]=useState(false);// 토글 상태\nconst[sortType,setSortType]=useState('최신순');// 현재 선택된 정렬 옵션\nconst[searchTerm,setSearchTerm]=useState('');// 검색어 상태\nconst navigate=useNavigate();// 공개/비공개 상태가 변경될 때마다 그룹 목록을 업데이트\nuseEffect(()=>{const fetchGroups=async()=>{try{// 최신순으로 첫 페이지 데이터를 가져오기 위해 수정된 경로\nconst response=await fetch(`/api/groups?page=1&pageSize=10&sortBy=latest&isPublic=${isPublic}`);if(!response.ok){throw new Error('네트워크 응답에 문제가 있습니다.');}const data=await response.json();setGroups(data);}catch(error){console.error('데이터를 가져오는 도중 문제가 발생했습니다:',error);}};fetchGroups();setVisibleGroups(8);// 공개/비공개 전환 시 표시할 그룹 개수를 초기화\n},[isPublic]);// 의존성 배열에는 isPublic만 추가\n// 정렬에 따른 그룹 정렬\nconst sortGroups=type=>{let sortedGroups;switch(type){case'최신순':sortedGroups=[...groups].sort((a,b)=>a.dDay-b.dDay);// d-day 순서대로 정렬\nbreak;case'게시글 많은순':sortedGroups=[...groups].sort((a,b)=>b.memories-a.memories);// 추억 수로 정렬\nbreak;case'공감순':sortedGroups=[...groups].sort((a,b)=>b.likes-a.likes);// 공감 수로 정렬\nbreak;case'획득 배지순':sortedGroups=[...groups].sort((a,b)=>b.badges-a.badges);// 배지 수로 정렬\nbreak;default:sortedGroups=groups;}setGroups(sortedGroups);setSortType(type);setIsSortOpen(false);// 토글 닫기\n};const handleSortToggle=()=>{setIsSortOpen(!isSortOpen);// 토글 열고 닫기\n};const handlePublicClick=()=>setIsPublic(true);const handlePrivateClick=()=>setIsPublic(false);const handleLoadMore=()=>{setVisibleGroups(prev=>prev+10);};const handleGroupClick=groupId=>{navigate(`/group/${groupId}`);};// 검색어 입력 핸들러\nconst handleSearchInputChange=e=>{setSearchTerm(e.target.value);};// 검색 버튼 클릭 또는 엔터키 입력 시 실행\nconst handleSearch=e=>{e.preventDefault();// 폼의 기본 동작 방지\nconst filteredGroups=dummyGroups.filter(group=>group.isPublic===isPublic&&group.name===searchTerm);setGroups(filteredGroups);setVisibleGroups(filteredGroups.length);};return/*#__PURE__*/_jsxs(\"div\",{className:\"page-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"group-title\",children:\"\\uC870\\uAC01\\uC9D1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"group-create-container1\",children:/*#__PURE__*/_jsx(Link,{to:\"/GroupCreate\",className:\"create-group-button\",children:\"\\uADF8\\uB8F9 \\uB9CC\\uB4E4\\uAE30\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toggle-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:`toggle-button ${isPublic?'active':''}`,onClick:handlePublicClick,children:\"\\uACF5\\uAC1C\"}),/*#__PURE__*/_jsx(\"div\",{className:`toggle-button ${!isPublic?'active':''}`,onClick:handlePrivateClick,children:\"\\uBE44\\uACF5\\uAC1C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sort-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sort-toggle\",onClick:handleSortToggle,children:sortType}),isSortOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"sort-options\",children:[/*#__PURE__*/_jsx(\"div\",{onClick:()=>sortGroups('최신순'),children:\"\\uCD5C\\uC2E0\\uC21C\"}),/*#__PURE__*/_jsx(\"div\",{onClick:()=>sortGroups('게시글 많은순'),children:\"\\uAC8C\\uC2DC\\uAE00 \\uB9CE\\uC740\\uC21C\"}),/*#__PURE__*/_jsx(\"div\",{onClick:()=>sortGroups('공감순'),children:\"\\uACF5\\uAC10\\uC21C\"}),/*#__PURE__*/_jsx(\"div\",{onClick:()=>sortGroups('획득 배지순'),children:\"\\uD68D\\uB4DD \\uBC30\\uC9C0\\uC21C\"})]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"search-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"search-bar\",placeholder:\"\\uADF8\\uB8F9\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",value:searchTerm,onChange:handleSearchInputChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"search-button\",children:\"\\uAC80\\uC0C9\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"group-list\",children:groups.slice(0,visibleGroups).map(group=>/*#__PURE__*/_jsxs(\"div\",{className:\"group-card\",onClick:()=>handleGroupClick(group.id),children:[/*#__PURE__*/_jsx(\"div\",{className:\"group-image-container\",children:/*#__PURE__*/_jsx(\"img\",{src:group.imageUrl,alt:`${group.name} 이미지`,className:\"group-image\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"group-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"group-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"D+\",group.dDay]}),/*#__PURE__*/_jsx(\"span\",{children:group.isPublic?'공개':'비공개'})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"group-name\",children:group.name}),/*#__PURE__*/_jsx(\"p\",{className:\"group-description\",children:group.introduction}),/*#__PURE__*/_jsxs(\"div\",{className:\"group-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD68D\\uB4DD \\uBC30\\uC9C0 \",group.badges]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uCD94\\uC5B5 \",group.memories]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uADF8\\uB8F9 \\uACF5\\uAC10 \",group.likes,\"K\"]})]})]})]},group.id))}),groups.length>visibleGroups&&/*#__PURE__*/_jsx(\"div\",{className:\"load-more-box\",children:/*#__PURE__*/_jsx(\"button\",{className:\"load-more-button\",onClick:handleLoadMore,children:\"\\uB354\\uBCF4\\uAE30\"})})]});}export default PublicGroupList;","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","jsx","_jsx","jsxs","_jsxs","dummyGroups","Array","from","length","_","index","id","name","introduction","isPublic","dDay","Math","floor","random","badges","memories","likes","toFixed","imageUrl","PublicGroupList","setIsPublic","groups","setGroups","visibleGroups","setVisibleGroups","isSortOpen","setIsSortOpen","sortType","setSortType","searchTerm","setSearchTerm","navigate","fetchGroups","response","fetch","ok","Error","data","json","error","console","sortGroups","type","sortedGroups","sort","a","b","handleSortToggle","handlePublicClick","handlePrivateClick","handleLoadMore","prev","handleGroupClick","groupId","handleSearchInputChange","e","target","value","handleSearch","preventDefault","filteredGroups","filter","group","className","children","to","onClick","onSubmit","placeholder","onChange","slice","map","src","alt"],"sources":["C:/Users/Administrator/Desktop/토이프로젝트/memory/project-root/client/src/group/components/PublicGroupList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './publicGroupList.css';\r\n\r\n// 더미 그룹 데이터 생성 (컴포넌트 외부에서 정의)\r\nconst dummyGroups = Array.from({ length: 20 }, (_, index) => ({\r\n  id: index + 1,\r\n  name: `그룹 ${index + 1}`,\r\n  introduction: `이것은 그룹 ${index + 1}의 소개입니다.`,\r\n  isPublic: index % 2 === 0, \r\n  dDay: Math.floor(Math.random() * 300), // 숫자로 변경하여 정렬하기 쉽게 수정\r\n  badges: Math.floor(Math.random() * 5),\r\n  memories: Math.floor(Math.random() * 20),\r\n  likes: (Math.random() * 1000).toFixed(1),\r\n  imageUrl: 'https://via.placeholder.com/300', \r\n}));\r\n\r\nfunction PublicGroupList() {\r\n  const [isPublic, setIsPublic] = useState(true); \r\n  const [groups, setGroups] = useState([]); \r\n  const [visibleGroups, setVisibleGroups] = useState(8); \r\n  const [isSortOpen, setIsSortOpen] = useState(false); // 토글 상태\r\n  const [sortType, setSortType] = useState('최신순'); // 현재 선택된 정렬 옵션\r\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태\r\n  const navigate = useNavigate(); \r\n\r\n  // 공개/비공개 상태가 변경될 때마다 그룹 목록을 업데이트\r\n  useEffect(() => {\r\n    const fetchGroups = async () => {\r\n      try {\r\n        // 최신순으로 첫 페이지 데이터를 가져오기 위해 수정된 경로\r\n        const response = await fetch(`/api/groups?page=1&pageSize=10&sortBy=latest&isPublic=${isPublic}`);\r\n        if (!response.ok) {\r\n          throw new Error('네트워크 응답에 문제가 있습니다.');\r\n        }\r\n        const data = await response.json();\r\n        setGroups(data);\r\n      } catch (error) {\r\n        console.error('데이터를 가져오는 도중 문제가 발생했습니다:', error);\r\n      }\r\n    };\r\n  \r\n    fetchGroups();\r\n    setVisibleGroups(8); // 공개/비공개 전환 시 표시할 그룹 개수를 초기화\r\n  }, [isPublic]);\r\n  \r\n   // 의존성 배열에는 isPublic만 추가\r\n\r\n  // 정렬에 따른 그룹 정렬\r\n  const sortGroups = (type) => {\r\n    let sortedGroups;\r\n    switch (type) {\r\n      case '최신순':\r\n        sortedGroups = [...groups].sort((a, b) => a.dDay - b.dDay); // d-day 순서대로 정렬\r\n        break;\r\n      case '게시글 많은순':\r\n        sortedGroups = [...groups].sort((a, b) => b.memories - a.memories); // 추억 수로 정렬\r\n        break;\r\n      case '공감순':\r\n        sortedGroups = [...groups].sort((a, b) => b.likes - a.likes); // 공감 수로 정렬\r\n        break;\r\n      case '획득 배지순':\r\n        sortedGroups = [...groups].sort((a, b) => b.badges - a.badges); // 배지 수로 정렬\r\n        break;\r\n      default:\r\n        sortedGroups = groups;\r\n    }\r\n    setGroups(sortedGroups);\r\n    setSortType(type);\r\n    setIsSortOpen(false); // 토글 닫기\r\n  };\r\n\r\n  const handleSortToggle = () => {\r\n    setIsSortOpen(!isSortOpen); // 토글 열고 닫기\r\n  };\r\n\r\n  const handlePublicClick = () => setIsPublic(true);\r\n  const handlePrivateClick = () => setIsPublic(false);\r\n  const handleLoadMore = () => {\r\n    setVisibleGroups((prev) => prev + 10);\r\n  };\r\n\r\n  const handleGroupClick = (groupId) => {\r\n    navigate(`/group/${groupId}`);\r\n  };\r\n\r\n  // 검색어 입력 핸들러\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  // 검색 버튼 클릭 또는 엔터키 입력 시 실행\r\n  const handleSearch = (e) => {\r\n    e.preventDefault(); // 폼의 기본 동작 방지\r\n    const filteredGroups = dummyGroups.filter(\r\n      (group) => group.isPublic === isPublic && group.name === searchTerm\r\n    );\r\n    setGroups(filteredGroups);\r\n    setVisibleGroups(filteredGroups.length);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      {/* 상단 헤더 */}\r\n      <div className=\"header-container\">\r\n        <h1 className=\"group-title\">조각집</h1>\r\n        <div className=\"group-create-container1\">\r\n          <Link to=\"/GroupCreate\" className=\"create-group-button\">그룹 만들기</Link>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 검색 및 필터 박스 */}\r\n      <div className=\"filter-box\">\r\n        <div className=\"toggle-container\">\r\n          <div \r\n            className={`toggle-button ${isPublic ? 'active' : ''}`} \r\n            onClick={handlePublicClick}>\r\n            공개\r\n          </div>\r\n          <div \r\n            className={`toggle-button ${!isPublic ? 'active' : ''}`} \r\n            onClick={handlePrivateClick}>\r\n            비공개\r\n          </div>\r\n        </div>\r\n\r\n        {/* 정렬 토글 버튼 */}\r\n        <div className=\"sort-container\">\r\n          <button className=\"sort-toggle\" onClick={handleSortToggle}>{sortType}</button>\r\n          {isSortOpen && (\r\n            <div className=\"sort-options\">\r\n              <div onClick={() => sortGroups('최신순')}>최신순</div>\r\n              <div onClick={() => sortGroups('게시글 많은순')}>게시글 많은순</div>\r\n              <div onClick={() => sortGroups('공감순')}>공감순</div>\r\n              <div onClick={() => sortGroups('획득 배지순')}>획득 배지순</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 검색 기능 */}\r\n        <form onSubmit={handleSearch} className=\"search-container\">\r\n          <input \r\n            type=\"text\" \r\n            className=\"search-bar\" \r\n            placeholder=\"그룹명을 입력해주세요\" \r\n            value={searchTerm} \r\n            onChange={handleSearchInputChange} \r\n          />\r\n          <button type=\"submit\" className=\"search-button\">검색</button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* 그룹 리스트 */}\r\n      <div className=\"group-list\">\r\n        {groups.slice(0, visibleGroups).map((group) => (\r\n          <div key={group.id} className=\"group-card\" onClick={() => handleGroupClick(group.id)}>\r\n            <div className=\"group-image-container\">\r\n              <img src={group.imageUrl} alt={`${group.name} 이미지`} className=\"group-image\" />\r\n            </div>\r\n            <div className=\"group-details\">\r\n              <div className=\"group-meta\">\r\n                <span>D+{group.dDay}</span>\r\n                <span>{group.isPublic ? '공개' : '비공개'}</span>\r\n              </div>\r\n              <h4 className=\"group-name\">{group.name}</h4>\r\n              <p className=\"group-description\">{group.introduction}</p>\r\n              <div className=\"group-stats\">\r\n                <span>획득 배지 {group.badges}</span>\r\n                <span>추억 {group.memories}</span>\r\n                <span>그룹 공감 {group.likes}K</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* 더보기 버튼 */}\r\n      {groups.length > visibleGroups && (\r\n        <div className=\"load-more-box\">\r\n          <button className=\"load-more-button\" onClick={handleLoadMore}>더보기</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PublicGroupList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}