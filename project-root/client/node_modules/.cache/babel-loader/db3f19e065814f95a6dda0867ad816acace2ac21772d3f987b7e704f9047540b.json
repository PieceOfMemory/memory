{"ast":null,"code":"import React,{useState}from'react';import'./CommentCreate.css';// CSS 파일 연동\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CommentCreate(_ref){let{postId,onCommentCreated}=_ref;const[nickname,setNickname]=useState('');const[content,setContent]=useState('');const[password,setPassword]=useState('');const[errorMessage,setErrorMessage]=useState('');// 닉네임 입력 핸들러\nconst handleNicknameChange=e=>{setNickname(e.target.value);};// 댓글 내용 입력 핸들러\nconst handleContentChange=e=>{setContent(e.target.value);};// 비밀번호 입력 핸들러\nconst handlePasswordChange=e=>{setPassword(e.target.value);};// 댓글 등록 버튼 핸들러\nconst handleSubmit=async e=>{e.preventDefault();// 입력 유효성 검사\nif(!nickname||!content||!password){setErrorMessage('모든 항목을 입력해 주세요.');return;}// API 요청 데이터 구성\nconst commentData={nickname,content,password};try{// API 요청\nconst response=await fetch(`/api/posts/${postId}/comments`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(commentData)});if(response.ok){const data=await response.json();console.log('댓글 등록 성공:',data);// 부모 컴포넌트에 댓글이 생성되었음을 알림\nonCommentCreated(data);// 입력 필드 초기화 및 에러 메시지 초기화\nsetNickname('');setContent('');setPassword('');setErrorMessage('');}else{// 오류 처리\nconst errorData=await response.json();console.error('댓글 등록 실패:',errorData.message);setErrorMessage('댓글 등록에 실패했습니다. 다시 시도해 주세요.');}}catch(error){console.error('댓글 등록 에러:',error);setErrorMessage('오류가 발생했습니다. 다시 시도해 주세요.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB313\\uAE00 \\uB4F1\\uB85D\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"create-form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nickname\",children:\"\\uB2C9\\uB124\\uC784\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"nickname\",value:nickname,onChange:handleNicknameChange,placeholder:\"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"content\",children:\"\\uB313\\uAE00\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"content\",value:content,onChange:handleContentChange,placeholder:\"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:handlePasswordChange,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",required:true}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errorMessage}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"\\uB4F1\\uB85D\\uD558\\uAE30\"})]})]})});}export default CommentCreate;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","CommentCreate","_ref","postId","onCommentCreated","nickname","setNickname","content","setContent","password","setPassword","errorMessage","setErrorMessage","handleNicknameChange","e","target","value","handleContentChange","handlePasswordChange","handleSubmit","preventDefault","commentData","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","errorData","error","message","className","children","onSubmit","htmlFor","type","id","onChange","placeholder","required"],"sources":["C:/Users/user/Desktop/2024-2/boost/memoryMain/memory/project-root/client/src/comment/CommentCreate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CommentCreate.css'; // CSS 파일 연동\r\n\r\nfunction CommentCreate({ postId, onCommentCreated }) {\r\n  const [nickname, setNickname] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // 닉네임 입력 핸들러\r\n  const handleNicknameChange = (e) => {\r\n    setNickname(e.target.value);\r\n  };\r\n\r\n  // 댓글 내용 입력 핸들러\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  // 비밀번호 입력 핸들러\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  // 댓글 등록 버튼 핸들러\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // 입력 유효성 검사\r\n    if (!nickname || !content || !password) {\r\n      setErrorMessage('모든 항목을 입력해 주세요.');\r\n      return;\r\n    }\r\n\r\n    // API 요청 데이터 구성\r\n    const commentData = {\r\n      nickname,\r\n      content,\r\n      password,\r\n    };\r\n\r\n    try {\r\n      // API 요청\r\n      const response = await fetch(`/api/posts/${postId}/comments`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(commentData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('댓글 등록 성공:', data);\r\n\r\n        // 부모 컴포넌트에 댓글이 생성되었음을 알림\r\n        onCommentCreated(data);\r\n\r\n        // 입력 필드 초기화 및 에러 메시지 초기화\r\n        setNickname('');\r\n        setContent('');\r\n        setPassword('');\r\n        setErrorMessage('');\r\n      } else {\r\n        // 오류 처리\r\n        const errorData = await response.json();\r\n        console.error('댓글 등록 실패:', errorData.message);\r\n        setErrorMessage('댓글 등록에 실패했습니다. 다시 시도해 주세요.');\r\n      }\r\n    } catch (error) {\r\n      console.error('댓글 등록 에러:', error);\r\n      setErrorMessage('오류가 발생했습니다. 다시 시도해 주세요.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-container\">\r\n        <h2>댓글 등록</h2>\r\n        <form onSubmit={handleSubmit} className=\"create-form\">\r\n          {/* 닉네임 입력 */}\r\n          <label htmlFor=\"nickname\">닉네임</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"nickname\"\r\n            value={nickname}\r\n            onChange={handleNicknameChange}\r\n            placeholder=\"닉네임을 입력해 주세요\"\r\n            required\r\n          />\r\n\r\n          {/* 댓글 내용 입력 */}\r\n          <label htmlFor=\"content\">댓글</label>\r\n          <textarea\r\n            id=\"content\"\r\n            value={content}\r\n            onChange={handleContentChange}\r\n            placeholder=\"댓글을 입력해 주세요\"\r\n            required\r\n          />\r\n\r\n          {/* 비밀번호 입력 */}\r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            placeholder=\"비밀번호를 입력해 주세요\"\r\n            required\r\n          />\r\n\r\n          {/* 에러 메시지 */}\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n          {/* 등록하기 버튼 */}\r\n          <button type=\"submit\" className=\"submit-button\">등록하기</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentCreate;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}